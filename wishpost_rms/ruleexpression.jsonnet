local field = import 'lib/field.libsonnet';
local types = import 'lib/types.libsonnet';
{
	alias: "RuleExpression",
	fields: { 
		_id: field("rule_id", type=types.STRING, required=true),
		a: field("actions", type=types.LIST(types.INT)),
		bs: field("base_score", type=types.INT),
		c: field("condition", type=types.INT),
		ca: field("created_author", type=types.STRING),
		ccui: field("copy_come_up_id", type=types.STRING),
		cdp: field("depth_curr", type=types.INT),
		ct: field("created_datetime", type=types.DATE),
		ctm: field("terminate", type=types.BOOL),
		def: field("resolved_expression", type=types.STRING),
		desc: field("description", type=types.STRING),
		e: field("evaluations", type="[]wishpost_rms.ruleevaluation"),
		eg: field("evaluation_groups", type="[]wishpost_rms.ruleevaluationgroup"),
		mdp: field("depth_max", type=types.INT),
		n: field("rule_name", type=types.STRING, required=true),
		pid: field("copy_id", type=types.STRING),
		pr: field("parent_rule_id", type=types.STRING),
		rid: field("ruleset_id", type=types.STRING, required=true),
		rt: field("status", type=types.INT),
		s: field("score", type=types.INT),
		sl: field("lower_bound", type=types.INT),
		srs: field("sub_rule_id_list", type=types.LIST(types.STRING)),
		su: field("upper_bound", type=types.INT),
		t: field("rule_template", type=types.INT, required=true),
		u: field("last_updated", type=types.DATE),
		ua: field("updated_author", type=types.STRING),
		w: field("weight", type=types.STRING),
	},
}
